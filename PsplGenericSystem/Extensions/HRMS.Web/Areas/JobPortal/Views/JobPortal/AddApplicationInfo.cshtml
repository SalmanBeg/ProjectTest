@model HRMS.Web.ViewModels.ApplicationInfoFormModel
@using HRMS.Common.Helpers;
@using HRMS.Web.Helper;

@{
    ViewBag.Title = "Additional Info";
    Layout = "~/Areas/JobPortal/Views/Shared/_JobPortalMaster.cshtml";
}

<script src="~/Scripts/jquery-ui-1.10.3.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"></script>

<script>
    $(function () {
        $("#accordion").accordion();
    });
</script>

<h3>Additional Info</h3>
@using (Html.BeginForm("AddApplicationInfo", "JobPortal", FormMethod.Post, new { id = "updateForm" }))
{



    @*<div id="accordion">*@
    <div class="col-sm-6">
        <div class="form-group">
            @Html.HiddenFor(k => k.JobApplicant.JobApplicantId)
            @Html.LabelFor(k => k.JobApplicant.FirstName, new { @class = "col-sm-3 control-label required", id = "txtApplicantId" })
            <div class="col-sm-9">
                @Html.TextBoxFor(k => k.JobApplicant.FirstName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(k => k.JobApplicant.LastName, new { @class = "col-sm-3 control-label " })
            <div class="col-sm-9">
                @Html.TextBoxFor(k => k.JobApplicant.LastName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(k => k.JobApplicant.Gender, new { @class = "col-sm-3 control-label required" })
            <div class="col-sm-9">
                @Html.DropDownListFor(k => k.JobApplicant.Gender, new SelectList(Model.GenderList, "ID", "Name"), "--Select--", new { @class = " form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(k => k.JobApplicant.Address, new { @class = "col-sm-3 control-label required" })
            <div class="col-sm-9">
                @Html.TextAreaFor(k => k.JobApplicant.Address, new { @class = "form-control" })
            </div>
        </div>
    </div>

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(k => k.JobApplicant.Phone, new { @class = "col-sm-3 control-label " })
                    <div class="col-sm-9">
                        @Html.TextAreaFor(k => k.JobApplicant.Phone, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(k => k.JobApplicant.City, new { @class = "col-sm-3 control-label " })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(k => k.JobApplicant.City, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(k => k.JobApplicant.Email, new { @class = "col-sm-3 control-label " })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(k => k.JobApplicant.Email, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
    </div>

}
@using (Html.BeginForm("UpdateEducationInfo", "JobPortal", FormMethod.Post, new { id = "updateForm" }))
{

    <div class="form-horizontal">
        <div class="form-group">

            <div class="col-sm-9" style="padding:0px">
                <h3>Education</h3>
                @Html.HiddenFor(k => k.ApplicantEducation.ApplicantId, new { @id = "hdnApplicantId" })
                @Html.ActionLink("Add  ", "AddEducationInfo", null, new { @class = "btn btn-success" })
                @Html.ActionLink("Delete  ", null, null, new { @class = "btn btn-danger", @id = "btnDeleteApplicantEducation" })
                <table class="footable table" data-filter="#filter" data-page-size="5" data-page-previous-text="prev" data-page-next-text="next" id="tabeducation">
                    <thead>
                        <tr>
                            <th>
                                <input type="checkbox" id="chksa" />
                            </th>
                            <th>
                                University
                            </th>
                            <th>
                                Degree
                            </th>
                            <th>
                                From Date
                            </th>
                            <th>
                                To Date
                            </th>
                            <th>
                                Activities
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.lstApplicantEducation.Count; i++)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" value="" data-val-1="@Model.lstApplicantEducation[i].ApplicantEducationId" class="btncheckapplicanteducation" />
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.HiddenFor(k => k.lstApplicantEducation[i].ApplicantEducationId)
                                        @Html.HiddenFor(k => k.lstApplicantEducation[i].ApplicantId)
                                        @Html.HiddenFor(k => k.lstApplicantEducation[i].JobId)
                                        @Html.DisplayFor(k => k.lstApplicantEducation[i].University, new { @class = "form-control required", id = "txtUniversity" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstApplicantEducation[i].University, new { @class = "form-control required", id = "txtUniversity" })
                                    </span>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantEducation[i].Degree, new { @class = "form-control", id = "txtDegree" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstApplicantEducation[i].Degree, new { @class = "form-control", id = "txtDegree" })
                                    </span>
                                </td>

                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantEducation[i].FromDate, new { @class = "form-control" })
                                    </span>
                                    <div class="input-group">
                                        <span class="edit-mode">
                                            @Html.TextBoxFor(k => k.lstApplicantEducation[i].FromDate, (Model.lstApplicantEducation[i].FromDate == null ? "" : ((DateTime)Model.lstApplicantEducation[i].FromDate).ToString("MM/dd/yyyy")), new { @class = "form-control dateControl", @maxlength = "10", @id = "txtfromdate" })
                                            <label for="txtfromdate" class="input-group-addon btn" style="float:left">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </label>
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantEducation[i].ToDate, new { @class = "form-control" })
                                    </span>
                                    <div class="input-group">
                                        <span class="edit-mode">
                                            @Html.TextBoxFor(k => k.lstApplicantEducation[i].ToDate, (Model.lstApplicantEducation[i].ToDate == null ? "" : ((DateTime)Model.lstApplicantEducation[i].ToDate).ToString("MM/dd/yyyy")), new { @class = "form-control dateControl", @id = "txttodate", @maxlength = 10 })
                                            <label for="txttodate" class="input-group-addon btn" style="float:left">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </label>
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantEducation[i].Activities, new { @class = "form-control", id = "txtActivities" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstApplicantEducation[i].Activities, new { @class = "form-control", id = "txtActivities" })
                                    </span>
                                </td>
                                <td>
                                    <button type="submit" id="btnsubmiteducation" class="btnSaveEducation btn btn-success edit-mode" style="display:none;">Save</button>
                                    <a href="javascript:void(0)" class="edit-user display-mode" id="editEducation">Edit</a>
                                    <a href="javascript:void(0)" class="cancel-user edit-mode" id="canceleducation">Cancel</a>

                                </td>

                            </tr>

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("UpdateEmploymentInfo", "JobPortal", FormMethod.Post, new { id = "updateForm" }))
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-9" style="padding:0px">
                <h3>Employment</h3>
                @Html.ActionLink("Add  ", "AddEmploymentInfo", null, new { @class = "btn btn-success" })
                @Html.ActionLink("Delete  ", null, null, new { @class = "btn btn-danger", @id = "btnDeleteApplicantEmployment" })
                <table class="footable table" data-filter="#filter" data-page-size="5" data-page-previous-text="prev" data-page-next-text="next" id="tabEmployment">
                    <thead>
                        <tr>
                            <th>

                            </th>
                            <th>
                                Title
                            </th>
                            <th>
                                Description
                            </th>
                            <th>
                                Location
                            </th>
                            <th>
                                Start Date
                            </th>
                            <th>
                                End Date
                            </th>
                            <th>

                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.lstApplicantEmploymentHistory.Count; i++)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" value="" data-val-1="@Model.lstApplicantEmploymentHistory[i].ApplicantEmploymentHistoryId" class="btncheckdependent" />
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.HiddenFor(k => k.lstApplicantEmploymentHistory[i].ApplicantEmploymentHistoryId)
                                        @Html.HiddenFor(k => k.lstApplicantEmploymentHistory[i].ApplicantId)
                                        @Html.HiddenFor(k => k.lstApplicantEmploymentHistory[i].JobId)
                                        @Html.DisplayFor(k => k.lstApplicantEmploymentHistory[i].Title, new { @class = "form-control" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstApplicantEmploymentHistory[i].Title, new { @class = "form-control" })
                                    </span>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantEmploymentHistory[i].Description, new { @class = "form-control" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextAreaFor(k => k.lstApplicantEmploymentHistory[i].Description, new { @class = "form-control" })
                                    </span>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantEmploymentHistory[i].Location, new { @class = "form-control" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstApplicantEmploymentHistory[i].Location, new { @class = "form-control" })
                                    </span>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantEmploymentHistory[i].EmploymentStartDate, new { @class = "form-control" })
                                    </span>
                                    <div class="input-group">
                                        <span class="edit-mode">
                                            @Html.TextBoxFor(k => k.lstApplicantEmploymentHistory[i].EmploymentStartDate, (Model.lstApplicantEmploymentHistory[i].EmploymentStartDate == null ? "" : ((DateTime)Model.lstApplicantEmploymentHistory[i].EmploymentStartDate).ToString("MM/dd/yyyy")), new { @class = "form-control dateControl", @id = "txtstartDate" })
                                            <label for="txtstartDate" class="input-group-addon btn" style="float:left">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </label>
                                        </span>
                                    </div>
                                </td>

                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantEmploymentHistory[i].EmploymentEndDate, new { @class = "form-control" })
                                    </span>
                                    <div class="input-group">
                                        <span class="edit-mode">
                                            @Html.TextBoxFor(k => k.lstApplicantEmploymentHistory[i].EmploymentEndDate, (Model.lstApplicantEmploymentHistory[i].EmploymentEndDate == null ? "" : ((DateTime)Model.lstApplicantEmploymentHistory[i].EmploymentEndDate).ToString("MM/dd/yyyy")), new { @class = "form-control dateControl", @id = "txtendDate" })
                                            <label for="txtendDate" class="input-group-addon btn" style="float:left">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </label>
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    <button type="submit" id="btnsubmitemployment" class="btn btn-success edit-mode" style="display:none;">Save</button>
                                    <a href="javascript:void(0)" class="edit-user display-mode" id="editemployment">Edit</a>
                                    <a href="javascript:void(0)" class="cancel-user edit-mode" id="cancelemployment">Cancel</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("UpdateSkillInfo", "JobPortal", FormMethod.Post, new { id = "updateForm" }))
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-9" style="padding:0px">
                <h3>Skills</h3>
                @Html.ActionLink("Add  ", "AddSkillInfo", null, new { @class = "btn btn-success" })
                @Html.ActionLink("Delete  ", null, null, new { @class = "btn btn-danger", @id = "btnDeleteApplicantSkill" })
                <table class="footable table" data-filter="#filter" data-page-size="5" data-page-previous-text="prev" data-page-next-text="next" id="tabskill">
                    <thead>
                        <tr>
                            <th>

                            </th>
                            <th>
                                Type
                            </th>
                            <th>
                                Description
                            </th>
                            <th>

                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.lstApplicantAchievementsAndAssociations.Count; i++)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" value="" data-val-1="@Model.lstApplicantAchievementsAndAssociations[i].ApplicantAchievementsAndAssociationsId" class="btncheckdependent" />
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.HiddenFor(k => k.lstApplicantAchievementsAndAssociations[i].ApplicantAchievementsAndAssociationsId)
                                        @Html.HiddenFor(k => k.lstApplicantAchievementsAndAssociations[i].ApplicantId)
                                        @Html.HiddenFor(k => k.lstApplicantAchievementsAndAssociations[i].JobId)
                                        @Html.DisplayFor(k => k.lstApplicantAchievementsAndAssociations[i].Type, new { @class = "form-control" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstApplicantAchievementsAndAssociations[i].Type, new { @class = "form-control" })
                                    </span>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstApplicantAchievementsAndAssociations[i].Description, new { @class = "form-control" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstApplicantAchievementsAndAssociations[i].Description, new { @class = "form-control" })
                                    </span>
                                </td>
                                <td>
                                    <button type="submit" id="btnsubmitskill" class="btn btn-success edit-mode" style="display:none;">Save</button>
                                    <a href="javascript:void(0)" class="edit-user display-mode" id="editskill">Edit</a>
                                    <a href="javascript:void(0)" class="cancel-user edit-mode" id="cancelskill">Cancel</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("UpdateCertificationLicence", "JobPortal", FormMethod.Post, new { id = "updateForm" }))
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-9" style="padding:0px">
                <h3>Licence</h3>

                @Html.ActionLink("Add  ", "AddCertificationLicence", null, new { @class = "btn btn-success" })
                @Html.ActionLink("Delete  ", null, null, new { @class = "btn btn-danger", @id = "btnDeleteCertificationLicence" })
                <table class="footable table" data-filter="#filter" data-page-size="5" data-page-previous-text="prev" data-page-next-text="next" id="tablicence">
                    <thead>
                        <tr>
                            <th>

                            </th>
                            <th>
                                Name
                            </th>
                            @*<th>
                                File Name
                            </th>*@
                            <th>
                                Issue Date
                            </th>
                            <th>
                                Renewal Date
                            </th>
                            <th>
                                Expiration Date
                            </th>
                            <th>

                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.lstCertificationandLicense.Count; i++)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" value="" data-val-1="@Model.lstCertificationandLicense[i].CertificationLicensesId" class="btncheckdependent" />
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.HiddenFor(k => k.lstCertificationandLicense[i].CompanyId)
                                        @Html.HiddenFor(k => k.lstCertificationandLicense[i].UserId)
                                        @Html.HiddenFor(k => k.lstCertificationandLicense[i].CertificationLicensesId)
                                        @Html.DisplayFor(k => k.lstCertificationandLicense[i].Name, new { @class = "form-control" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstCertificationandLicense[i].Name, new { @class = "form-control" })
                                    </span>
                                </td>
                                @*<td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstCertificationandLicense[i].FileName, new { @class = "form-control" })
                                    </span>
                                    <span class="edit-mode">
                                        @Html.TextBoxFor(k => k.lstCertificationandLicense[i].FileName, new { @class = "form-control" })
                                    </span>
                                </td>*@
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstCertificationandLicense[i].IssueDate, new { @class = "form-control" })
                                    </span>
                                    <div class="input-group">
                                        <span class="edit-mode">
                                            @Html.TextBoxFor(k => k.lstCertificationandLicense[i].IssueDate, (Model.lstCertificationandLicense[i].IssueDate == null ? "" : ((DateTime)Model.lstCertificationandLicense[i].IssueDate).ToString("MM/dd/yyyy")), new { @class = "form-control dateControl", @maxlength = "10", @id = "txtissuedate" })
                                            <label for="txtissuedate" class="input-group-addon btn" style="float:left">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </label>
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstCertificationandLicense[i].RenewalDate, new { @class = "form-control" })
                                    </span>
                                    <div class="input-group">
                                        <span class="edit-mode">
                                            @Html.TextBoxFor(k => k.lstCertificationandLicense[i].RenewalDate, (Model.lstCertificationandLicense[i].RenewalDate == null ? "" : ((DateTime)Model.lstCertificationandLicense[i].RenewalDate).ToString("MM/dd/yyyy")), new { @class = "form-control dateControl", @maxlength = "10", @id = "txtrenewaldate" })
                                            <label for="txtrenewaldate" class="input-group-addon btn" style="float:left">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </label>
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    <span class="display-mode">
                                        @Html.DisplayFor(k => k.lstCertificationandLicense[i].ExpirationDate, new { @class = "form-control" })
                                    </span>
                                    <div class="input-group">
                                        <span class="edit-mode">
                                            @Html.TextBoxFor(k => k.lstCertificationandLicense[i].ExpirationDate, (Model.lstCertificationandLicense[i].ExpirationDate == null ? "" : ((DateTime)Model.lstCertificationandLicense[i].ExpirationDate).ToString("MM/dd/yyyy")), new { @class = "form-control dateControl", @maxlength = "10", @id = "txtexpirationdate" })
                                            <label for="txtexpirationdate" class="input-group-addon btn" style="float:left">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </label>
                                        </span>
                                    </div>
                                </td>

                                <td>
                                    <button type="submit" id="btnsubmitcertification" class="btn btn-success edit-mode" style="display:none;">Save</button>
                                    <a href="javascript:void(0)" class="edit-user display-mode" id="editcertification">Edit</a>
                                    <a href="javascript:void(0)" class="cancel-user edit-mode" id="cancelcertification">Cancel</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<div class="form-group">
    <div class="col-sm-offset-2 control-button">
        <button type="submit" id="btnsubmit" class="btn btn-success">Save</button>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {

        var resultingSiteview = "<h1>Additional Info<small>Additional Info</small></h1><ol class=" + '"breadcrumb"' + "><li><a href=" + '"../Home/EmployeeDashboard"' + "><i class=" + '"fa fa-dashboard"' + "></i>Home</a></li><li class=" + '"active"' + ">Additional Info</li></ol>";
        $("#header-section").empty();
        $("#header-section").html(resultingSiteview);
        $('.edit-mode').hide();
        $('.display-mode').show();
    });
    $('.edit-mode').hide();
    $('.edit-user, .cancel-user').on('click', function (e) {

        e.stopPropagation();
        e.preventDefault();
        var tr = $(this).parents('tr:first');

        tr.find('.edit-mode,.display-mode').toggle();


    });

    $("#editEducation").on('click', function (e) {
        
        var CurrentEditLink = $(this);
        var CurrentTr = CurrentEditLink.parent().parent();
        var btnsubmiteducation = CurrentTr.find("td:eq(6)");
        $("#btnsubmiteducation").show();
        $("#canceleducation").show();
        $("#editEducation").hide();


    });
    $("#canceleducation").on('click', function (e) {
        $("#btnsubmiteducation").hide();
        $("#editEducation").show();
        $("#canceleducation").hide();


    });


    $("#editemployment").on('click', function (e) {
        $("#btnsubmitemployment").show();
        $("#cancelemployment").show();
        $("#editemployment").hide();

    });
    $("#cancelemployment").on('click', function (e) {
        $("#btnsubmitemployment").hide();
        $("#editemployment").show();
        $("#cancelemployment").hide();

    });


    $("#editskill").on('click', function (e) {
        $("#btnsubmitskill").show();
        $("#cancelskill").show();
        $("#editskill").hide();

    });
    $("#cancelskill").on('click', function (e) {
        $("#btnsubmitskill").hide();
        $("#editskill").show();
        $("#cancelskill").hide();

    });


    $("#editcertification").on('click', function (e) {
        $("#btnsubmitcertification").show();
        $("#cancelcertification").show();
        $("#editcertification").hide();

    });
    $("#cancelcertification").on('click', function (e) {
        $("#btnsubmitcertification").hide();
        $("#editcertification").show();
        $("#cancelcertification").hide();

    });

    
    $("#btnDeleteApplicantEducation").click(function (e) {
        e.preventDefault();
        e.stopPropagation();
        var baseurl = '@System.Configuration.ConfigurationManager.AppSettings["BaseURL"]';
        var searchIDs = $("#tabeducation input:checkbox:checked").map(function () {
            return $(this).attr("data-val-1");
        }).get();
        if (searchIDs.toString().length > 0) {
            $.ajax({
                url: baseurl + "JobPortal/JobPortal/DeleteApplicantEducation",
                type: "POST",
                cache: "false",
                data: { applicantEducationIds: searchIDs.toString() },
                success: function (data) {
                    if (data == "True") {
                        window.location.href = window.location.href;
                    }
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        }
        else { alert("Please select item(s) to delete."); }
    });

    $("#btnDeleteApplicantEmployment").click(function (e) {
        e.preventDefault();
        e.stopPropagation();
        var baseurl = '@System.Configuration.ConfigurationManager.AppSettings["BaseURL"]';
        var searchIDs = $("#tabEmployment input:checkbox:checked").map(function () {
            return $(this).attr("data-val-1");
        }).get();
        if (searchIDs.toString().length > 0) {
            $.ajax({
                url: baseurl + "JobPortal/JobPortal/DeleteApplicantEmployment",
                type: "POST",
                cache: "false",
                data: { applicantEmploymentHistoryIds: searchIDs.toString() },
                success: function (data) {
                    if (data == "True") {
                        window.location.href = window.location.href;
                    }
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        }
        else { alert("Please select item(s) to delete."); }
    });


    $("#btnDeleteApplicantSkill").click(function (e) {
        e.preventDefault();
        e.stopPropagation();
        var baseurl = '@System.Configuration.ConfigurationManager.AppSettings["BaseURL"]';
        var searchIDs = $("#tabskill input:checkbox:checked").map(function () {
            return $(this).attr("data-val-1");
        }).get();
        if (searchIDs.toString().length > 0) {
            $.ajax({
                url: baseurl + "JobPortal/JobPortal/DeleteApplicantSkill",
                type: "POST",
                cache: "false",
                data: { applicantAchievementsAndAssociationsIds: searchIDs.toString() },
                success: function (data) {
                    if (data == "True") {
                        window.location.href = window.location.href;
                    }
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        }
        else { alert("Please select item(s) to delete."); }
    });



    $("#btnDeleteCertificationLicence").click(function (e) {
        e.preventDefault();
        e.stopPropagation();
        var baseurl = '@System.Configuration.ConfigurationManager.AppSettings["BaseURL"]';
        var searchIDs = $("#tablicence input:checkbox:checked").map(function () {
            return $(this).attr("data-val-1");
        }).get();
        if (searchIDs.toString().length > 0) {
            $.ajax({
                url: baseurl + "JobPortal/JobPortal/DeleteCertificationandLicense",
                type: "POST",
                cache: "false",
                data: { certificationandLicenseIds: searchIDs.toString() },
                success: function (data) {
                    if (data == "True") {
                        window.location.href = window.location.href;
                    }
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        }
        else { alert("Please select item(s) to delete."); }
    });



</script>


