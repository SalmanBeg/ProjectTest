@model @HRMS.Web.ViewModels.RoundingFormModel
@using HRMS.Web.Helper;
@using System.Web.Optimization;
@{
    ViewBag.Title = "EditRoundingDetail";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

html>
<body>

    @using (Html.BeginForm("EditRoundingDetail", "Rounding", FormMethod.Post))
    {
        @Html.ValidationSummary(true)

        <div class="form-horizontal">
            <fieldset>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.RoundingDescription, new { @class = "col-sm-4 control-label required" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.Rounding.RoundingDescription, new { @class = "form-control", placeholder = "Rounding Description" })
                        </div>
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <legend>Work Time</legend>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.StartRoundType, new { @class = "col-sm-4 control-label required" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.StartRoundType, new SelectList(Model.RoundTypeList, "RoundTypeId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundTypeList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.StartRoundMinutes, new { @class = "col-sm-4 control-label required" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.StartRoundMinutes, new SelectList(Model.RoundMinuteList, "RoundMinutesId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundMinutesList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.EndRoundType, new { @class = "col-sm-4 control-label required" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.EndRoundType, new SelectList(Model.RoundTypeList, "RoundTypeId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundTypeList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.EndPunchMinutes, new { @class = "col-sm-4 control-label required" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.EndPunchMinutes, new SelectList(Model.RoundMinuteList, "RoundMinutesId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundMinutesList" } })
                        </div>
                    </div>
                </div>
            </fieldset>


            <fieldset>
                <legend>Lunch Time</legend>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.LunchStartRoundType, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.LunchStartRoundType, new SelectList(Model.RoundTypeList, "RoundTypeId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundTypeList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.LunchStartRoundMinutes, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.LunchStartRoundMinutes, new SelectList(Model.RoundMinuteList, "RoundMinutesId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundMinutesList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.LunchEndRoundType, new { @class = "col-sm-4 control-label " })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.LunchEndRoundType, new SelectList(Model.RoundTypeList, "RoundTypeId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundTypeList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.LunchEndRoundTMinutes, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.LunchEndRoundTMinutes, new SelectList(Model.RoundMinuteList, "RoundMinutesId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundMinutesList" } })
                        </div>
                    </div>
                </div>
            </fieldset>


            <fieldset>
                <legend>Break Time</legend>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.BreakStartRoundType, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.BreakStartRoundType, new SelectList(Model.RoundTypeList, "RoundTypeId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundTypeList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.BreakStartRoundMinutes, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.BreakStartRoundMinutes, new SelectList(Model.RoundMinuteList, "RoundMinutesId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundMinutesList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.BreakEndRoundType, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.BreakEndRoundType, new SelectList(Model.RoundTypeList, "RoundTypeId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundTypeList" } })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.BreakEndRoundTMinutes, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.Rounding.BreakEndRoundTMinutes, new SelectList(Model.RoundMinuteList, "RoundMinutesId", "Name"), "--Select--", new Dictionary<string, Object> { { "class", "form-control" }, { "data-val-1", "Days" }, { "id", "dpRoundMinutesList" } })
                        </div>
                    </div>
                </div>
            </fieldset>


            <fieldset>
                <legend>Report Exception Configuration</legend>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.ReportEarlyIn, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.Rounding.ReportEarlyIn, new { @class = "form-control", placeholder = "Early In" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.ReportEarlyOut, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.Rounding.ReportEarlyOut, new { @class = "form-control", placeholder = "Early Out" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.ReportLateIn, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.Rounding.ReportLateIn, new { @class = "form-control", placeholder = "Late In" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.ReportLateOut, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.Rounding.ReportLateOut, new { @class = "form-control", placeholder = "Late Out" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.ReportLunchUnder, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.Rounding.ReportLunchUnder, new { @class = "form-control", placeholder = "Lunch Under" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Rounding.ReportLunchOver, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.Rounding.ReportLunchOver, new { @class = "form-control", placeholder = "lunch Over" })
                        </div>
                    </div>
                </div>
            </fieldset>

        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 control-button">
                <button type="submit" id="btnsubmit" class="btn btn-success">Save</button>
                @Html.ActionLink("Cancel", "SelectAllRoundingDetails", "Rounding", new { @CompanyId = GlobalsVariables.CurrentCompanyId }, new { @class = "btn btn-success" })
            </div>
            <div>
                @Html.HiddenFor(m => m.Rounding.RoundingId)
                @Html.HiddenFor(m => m.Rounding.RoundingPolicyCode)
                @Html.HiddenFor(m => m.Rounding.CompanyId)

            </div>
        </div>
    }

    <script type="text/javascript">
        $(document).ready(function () {
            var resultingSiteview = "<h1>Rounding <small>Edit Rounding </small></h1><ol class=" + '"breadcrumb"' + "><li><a href=" + '"../Home/EmployeeDashboard"' + "><i class=" + '"fa fa-dashboard"' + "></i>Home</a></li><li class=" + '"active"' + ">Rounding</li></ol>";
            $("#header-section").empty();
            $("#header-section").html(resultingSiteview);
        });
    </script>


</body>
</html>

